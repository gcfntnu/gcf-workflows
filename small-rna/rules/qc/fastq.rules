#-*- mode: snakemake -*-
"""Fastqc rules on trimmed fastq files
"""

ORG_MAP = {'homo_sapiens': 'hsa', 'mus_musculus': 'mmu', 'rattus_norvegicus': 'rnor'}
MIRTRACE_DIR = join(INTERIM_DIR, 'smallrna', 'qc', 'mirtrace')

rule qc_fastq_mirtrace_config:
    output:
        'mirtrace.conf'
    params:
        adapter = config['adapter']
    run:
        with open(output[0], 'w') as fh:
            for name, info in config['samples'].items():
                filename = join(FASTQ_DIR, info['R1'])
                line = ','.join([os.path.abspath(filename), name])
                fh.write(line + '\n')

def mirtrace_input(*args):
    os.makedirs(MIRTRACE_DIR, exist_ok=True)
    out = []
    for k, v in config['samples'].items():
        filename = os.path.abspath(join(FASTQ_DIR, v['R1']))  
        out.append(filename)
    return out

rule qc_fastq_mirtrace:
    input:
        mirtrace_input()
    params:
        org = ORG_MAP[config['organism']],
        adapter = config['adapter'],
        protocol = 'qiaseq',
        outdir = MIRTRACE_DIR
    singularity:
        'docker://' + config['docker']['mirtrace']
    output:
        qc = join(MIRTRACE_DIR, 'mirtrace-results.json'),
        length = join(MIRTRACE_DIR, 'mirtrace-stats-length.tsv')
    shell:
        'mirtrace qc '
        '--species {params.org} '
        '--adapter {params.adapter} '
        '--protocol {params.protocol} '
        '--output-dir {params.outdir} '
        '--force '
        '{input} '

