#-*- mode: snakemake -*-
"""
Snakemake rules for quality control of rna-seq.
"""

QC_INTERIM = join(INTERIM_DIR, 'rnaseq', 'qc')

include:
    'qc/fastq.rules'
include:
    'qc/bam.rules'
include:
    'qc/quant.rules'


if len(config['read_geometry']) > 1:
    rule qc_all:
        input:
            expand(rules.rseqc_read_distribution.output, sample=SAMPLES),
            expand(rules.rseqc_junction_annotation.output, sample=SAMPLES),
            expand(rules.rseqc_junction_saturation.output, sample=SAMPLES),
            expand(rules.picard_rnametrics.output, sample=SAMPLES),
            expand(rules.preseq_lc_extrap.output, sample=SAMPLES),
            expand(rules.qorts.output, sample=SAMPLES),
            expand(rules.picard_insertsize.output, sample=SAMPLES),
            expand(rules.rseqc_inner_distance.output, sample=SAMPLES),
            expand(rules.qualimap_rnaseq.output, sample=SAMPLES),
            expand(rules.salmon_meta_info.output, sample=SAMPLES),
            expand(rules.salmon_flendist.output, sample=SAMPLES),
            expand(rules.qc_fastq_fastqc.output, sample=SAMPLES),
            expand(rules.qc_fastq_fastqscreen.output, sample=SAMPLES)
else:
    rule qc_all:
        input:
            expand(rules.rseqc_read_distribution.output, sample=SAMPLES),
            expand(rules.rseqc_junction_annotation.output, sample=SAMPLES),
            expand(rules.rseqc_junction_saturation.output, sample=SAMPLES),
            expand(rules.picard_rnametrics.output, sample=SAMPLES),
            expand(rules.preseq_lc_extrap.output, sample=SAMPLES),
            expand(rules.qorts.output, sample=SAMPLES),
            expand(rules.qualimap_rnaseq.output, sample=SAMPLES),
            expand(rules.salmon_meta_info.output, sample=SAMPLES),
            expand(rules.qc_fastq_fastqc.output, sample=SAMPLES),
            expand(rules.qc_fastq_fastqscreen.output, sample=SAMPLES)
            
include:
    'qc/multiqc.rules'

rule bfq_qc_fastq:
    input:
        expand(rules.qc_fastq_fastqc.output, sample=SAMPLES),
        expand(rules.qc_fastq_fastqscreen.output, sample=SAMPLES)
    output:
        expand(join(BFQ_INTERIM, 'fastqscreen', '{sample}', '{sample}_screen.txt'), sample=SAMPLES),
        expand(join(BFQ_INTERIM, 'fastqc', '{sample}', '{sample}_R1_fastqc.zip'), sample=SAMPLES)
    run:
        for src, dst in zip(input, output):
            shell('ln -srf {src} {dst}')
