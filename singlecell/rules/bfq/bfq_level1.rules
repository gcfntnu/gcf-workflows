rule bfq_level1_qc_logs:
    input:
        expand(rules.qc_fastq_fastqc.output.R2_zip, sample=SAMPLES),
        expand(rules.qc_fastq_fastqc.output.R2_html, sample=SAMPLES),
        expand(rules.qc_fastq_fastqscreen.output, sample=SAMPLES),
        expand(rules.fastp_10x_R2.output.log_html, sample=SAMPLES),
        expand(rules.fastp_10x_R2.output.log_json, sample=SAMPLES),
    output:
        expand(join(BFQ_INTERIM, 'logs', 'fastqc', '{sample}_R2_fastqc.zip'), sample=SAMPLES),
        expand(join(BFQ_INTERIM, 'logs', 'fastqc', '{sample}_R2_fastqc.html'), sample=SAMPLES),
        expand(join(BFQ_INTERIM, 'logs', 'fastq_screen', '{sample}_R2_screen.txt'), sample=SAMPLES),
        expand(join(BFQ_INTERIM, 'logs', 'fastp', '{sample}.fastp.html'), sample=SAMPLES),
        expand(join(BFQ_INTERIM, 'logs', 'fastp', '{sample}.fastp.json'), sample=SAMPLES),
    run:
        for src, dst  in zip(input, output):
            shell('ln -sr {src} {dst}')

rule bfq_level1_all:
    input:
        rules.bfq_level1_qc_logs.output
