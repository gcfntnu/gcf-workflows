#-*- mode:snakemake -*-
"""pySCENIC Single-Cell rEgulatory Network Inference and Clustering

Auxilary data downloads

https://github.com/aertslab/pySCENIC
"""
ORG = config['organism']
assert(ORG in ['homo_sapiens', 'mus_musculus'])

ASSEMBLY_MAP = {'GRCh38': 'hg38', 'GRCh37': 'hg19', 'GRCm38': 'mm10', 'GRCm37': 'mm9'}

MOTIF2TF_MAP = {'homo_sapiens': 'https://resources.aertslab.org/cistarget/motif2tf/motifs-v9-nr.hgnc-m0.001-o0.0.tbl',
                'mus_musculus': 'https://resources.aertslab.org/cistarget/motif2tf/motifs-v9-nr.mgi-m0.001-o0.0.tbl'
}

CIS_DB_MAP = {'homo_sapiens':' https://resources.aertslab.org/cistarget/databases/homo_sapiens/{}/refseq_r80/mc9nr/gene_based/{}__refseq-r80__500bp_up_and_100bp_down_tss.mc9nr.feather',
              'mus_musculus': 'https://resources.aertslab.org/cistarget/databases/mus_musculus/{}/refseq_r80/mc9nr/gene_based/{}__refseq-r80__500bp_up_and_100bp_down_tss.mc9nr.feather'}

TF_MAP = {'homo_sapiens': 'https://raw.githubusercontent.com/aertslab/pySCENIC/master/resources/hs_hgnc_curated_tfs.txt',
          'mus_musculus': 'https://raw.githubusercontent.com/aertslab/pySCENIC/master/resources/mm_mgi_tfs.txt'}

ASSEMBLY = config['db'].get('assembly')
if ASSEMBLY is None:
    if ORG == 'homo_sapiens':
        ASSEMBLY = 'GRCh38'
    elif ORG == 'mus_musculus':
        ASSEMBLY = 'GRCm38'
P_ASSEMBLY = ASSEMBLY_MAP[ASSEMBLY]
MOTIF2TF_URL = MOTIF2TF_MAP[ORG]
CIS_DB_URL = CIS_DB_MAP[ORG].format(P_ASSEMBLY, P_ASSEMBLY)
TF_URL = TF_MAP[ORG]

PYSCENIC_EXT = join(EXT_DIR, 'pyscenic', ORG, ASSEMBLY)

rule pyscenic_tf:
    params:
        url = TF_URL,
        date = datetime.now().strftime("%d-%m-%Y")
    output:
        join(PYSCENIC_EXT, 'tfs.txt')
    log:
        join(PYSCENIC_EXT, 'logs', 'tfs.log')
    shell:
        """
        wget -O - {params.url} > {output}
        echo "Pyscenic,TF,{params.url},{params.date}" > {log}
        """

rule pyscenic_motif_db:
    output:
        join(PYSCENIC_EXT, 'motifs.tbl')
    params:
        url = MOTIF2TF_URL,
        date = datetime.now().strftime("%d-%m-%Y")
    log:
       join(PYSCENIC_EXT, 'logs', 'motifs.log') 
    shell:
        """
        wget -O - {params.url} -o {log} > {output}
        echo "Pyscenic,Motifs,{params.url},{params.date}" > {log}
        """
    
rule pyscenic_cis_db:
    output:
        join(PYSCENIC_EXT, 'tss.feather')
    params:
        url = CIS_DB_URL,
        date = datetime.now().strftime("%d-%m-%Y")
    log:
       join(PYSCENIC_EXT, 'logs', 'tss.log') 
    shell:
        """
        wget -O - {params.url} -o {log} > {output}
        echo "Pyscenic,Cis,{params.url},{params.date}" > {log}
        """

rule pyscenic_db_all:
    input:
        join(PYSCENIC_EXT, 'tfs.txt'),
        join(PYSCENIC_EXT, 'motifs.tbl'),
        join(PYSCENIC_EXT, 'tss.feather')
