
#-*- mode:snakemake -*-
from datetime import datetime

# config
extra_conf_fn = source_path('mirbase.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh, Loader=Loader) or {}
        update_config2(config, c)
        
MIRBASE_RELEASE = str(config['db']['mirbase'].get('release', '22'))
config['db']['mirbase']['release'] = MIRBASE_RELEASE
ORG = config.get('organism', 'homo_sapiens')
MIR_ORG = {'homo_sapiens': 'hsa',
           'human': 'hsa',
           'hsa': 'hsa',
           'mus_musculus': 'mmu',
           'mouse': 'mmu',
           'mmu': 'mmu',
           'rattus_norvegicus': 'rno',
           'rat': 'rno',
           'rno': 'rno'}

MIRBASE_EXT = join(EXT_DIR, 'mirbase', ORG, 'release-{}'.format(MIRBASE_RELEASE))

URLS = {'hairpin': 'https://mirbase.org/ftp/{}/hairpin.fa.gz'.format(MIRBASE_RELEASE),
        'mature': 'https://mirbase.org/ftp/{}/mature.fa.gz'.format(MIRBASE_RELEASE),
        'gff': 'https://mirbase.org/ftp/{}/genomes'.format(MIRBASE_RELEASE),
        'mirna_str': 'https://mirbase.org/ftp/{}/miRNA.str.gz'.format(MIRBASE_RELEASE)
}


rule mirbase_hairpin_fasta:
    params:
        url = URLS['hairpin'],
        mirbase_org = MIR_ORG[ORG],
        proxy = config.get('proxy', {}).get('wget', ''),
        date = datetime.now().strftime("%d-%m-%Y")
    output:
        fasta = join(MIRBASE_EXT, 'fasta', 'hairpin.fa')
    log:
        join(MIRBASE_EXT, 'logs', 'hairpin.log')
    container:
        'docker://' + config['docker']['default']
    shell:
        """
        wget {params.proxy} {params.url} -O- | gunzip -c | grep -A 1 "^>{params.mirbase_org}" | grep -v "^-" | sed 's/U/T/g' > {output.fasta}
        echo "Mirbase hairpin,{MIRBASE_RELEASE},{params.url},{params.date}" > {log}
        """

rule mirbase_mature_fasta:
    params:
        url = URLS['mature'],
        mirbase_org = MIR_ORG[ORG],
        proxy = config.get('proxy', {}).get('wget', ''),
        date = datetime.now().strftime("%d-%m-%Y")
    output:
        fasta = join(MIRBASE_EXT, 'fasta', 'mature.fa')
    log:
        join(MIRBASE_EXT, 'logs', 'mature.log')
    container:
        'docker://' + config['docker']['default']
    shell:
        """
        wget {params.proxy} {params.url} -O- | gunzip -c | grep -A 1 "^>{params.mirbase_org}" | grep -v "^-" | sed 's/U/T/g' > {output}
        echo "Mirbase mature,{MIRBASE_RELEASE},{params.url},{params.date}" > {log}
        """

rule mirbase_gff:        
    params:
        url = URLS['gff'],
        mirbase_org = MIR_ORG[ORG],
        proxy = config.get('proxy', {}).get('wget', ''),
        date = datetime.now().strftime("%d-%m-%Y")
    output:
        join(MIRBASE_EXT, 'anno', 'genes.gff3')
    log:
       join(MIRBASE_EXT, 'logs', 'gff.log')
    container:
        'docker://' + config['docker']['default']
    shell:
        """
        wget {params.proxy} -O - {params.url}/{params.mirbase_org}.gff3 > {output}
        echo "Mirbase gff,{MIRBASE_RELEASE},{params.url},{params.date}" > {log}
        """

rule mirbase_genes:
    input:
        rules.mirbase_gff.output
    params:
        script = source_path('scripts/mirbase_gff2genes.py')
    output:
        join(MIRBASE_EXT, 'anno', 'genes.tsv')
    container:
        'docker://' + config['docker']['default']
    shell:
        'python {params.script} {input} > {output}'
        
rule mirbase_mirna_str:
    params:
        url = URLS['mirna_str'],
        mirbase_org = MIR_ORG[ORG],
        proxy = config.get('proxy', {}).get('wget', ''),
        date = datetime.now().strftime("%d-%m-%Y")
    output:
        fasta = join(MIRBASE_EXT, 'anno', 'miRNA.str')
    log:
        join(MIRBASE_EXT, 'logs', 'mature.log')
    container:
        'docker://' + config['docker']['default']
    shell:
        """
        wget {params.proxy} {params.url} -O- | gunzip -c > {output}
        echo "Mirbase mirna_str,{MIRBASE_RELEASE},{params.url},{params.date}" > {log}
        """

rule seqbuster_db:
    input:
        rules.mirbase_hairpin_fasta.output,
        rules.mirbase_mirna_str.output
    output:
        outdir = directory(join(MIRBASE_EXT, 'seqbuster'))
    run:
        for fn in input:
            shell('mkdir -p {output.outdir}')
            shell('ln -sr {fn} -t {output.outdir}')
            
rule mirbase_db_all:
    input:
        join(MIRBASE_EXT, 'fasta', 'hairpin.fa'),
        join(MIRBASE_EXT, 'fasta', 'mature.fa'),
        join(MIRBASE_EXT, 'anno', 'genes.gff3'),
        join(MIRBASE_EXT, 'anno', 'miRNA.str'),
        join(MIRBASE_EXT, 'seqbuster')
                
