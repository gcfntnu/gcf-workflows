#-*- mode:snakemake -*-
"""10xgenomics external data and reference/index builds

support.10xgenomics.com/single-cell-gene-expression/software/downloads

"""
RELEASE = '2020-A'
_URLS= {
    'homo_sapiens': 'https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz',
    'mus_musculus': 'https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-mm10-2020-A.tar.gz',
    'homo_sapiens__mus_musculus': 'https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-and-mm10-2020-A.tar.gz',
    'ercc': 'http://cf.10xgenomics.com/supp/cell-exp/refdata-cellranger-ercc92-1.2.0.tar.gz',
    'whitelist_v1': 'https://gcf-winecellar.medisin.ntnu.no/10xgenomics/737K-april-2014_rc.txt',
    'whitelist_v2': 'https://gcf-winecellar.medisin.ntnu.no/10xgenomics/737K-august-2016.txt',
    'whitelist_v3': 'https://gcf-winecellar.medisin.ntnu.no/10xgenomics/3M-february-2018.txt',
    'sc3pv2_indexset': 'http://cf.10xgenomics.com/supp/cell-exp/chromium-shared-sample-indexes-plate.csv'}

_ASSEMBLY = {'homo_sapiens': 'GRCh38',
             'mus_musculus': 'GRCm38',
             'homo_sapiens__mus_musculus': 'GRCh38_GRCm38'
}

# config
ORG = config.get('organism', 'homo_sapiens')
if ORG not in ['homo_sapiens', 'mus_musculus', 'homo_sapiens__mus_musculus']:
    raise ValueError('No 10x prebuild for org: {}'.format(ORG))

DB_CONF = config['db'].get('10xgenomics', {})
TX_RELEASE = DB_CONF.get('release', RELEASE)
TX_ASSEMBLY = config['db']['assembly'] = DB_CONF['assembly'] = _ASSEMBLY[ORG]

config['db']['10xgenomics'] = DB_CONF
if config['db']['reference_db'] == '10xgenomics':
    REF_DIR = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY)

rule txgenomics_whitelist_v1:
    params:
        url = _URLS['whitelist_v1'],
        date = datetime.now().strftime("%d-%m-%Y"),
        proxy = config['proxy'].get('wget', ''),
    output:
        join(REF_DIR, '737K-april-2014_rc.txt')
    log:
        join(REF_DIR, 'logs', '737K-april-2014_rc.log')
    shell:
        """
        wget {params.proxy} -O {output} {params.url}
        echo "10xGenomics whitelist v1,NA,{params.url},{params.date}" > {log}
        """
        
rule txgenomics_whitelist_v2:
    params:
        url = _URLS['whitelist_v2'],
        date = datetime.now().strftime("%d-%m-%Y"),
        proxy = config['proxy'].get('wget', '')
    output:
        join(REF_DIR, '737K-august-2016.txt.txt')
    log:
        join(REF_DIR, 'logs', '737K-august-2016.txt.log')
    shell:
        """
        wget {params.proxy} -O {output} {params.url}
        echo "10xGenomics whitelist v2,NA,{params.url},{params.date}" > {log}
        """
        
rule txgenomics_whitelist_v3:
    params:
        url = _URLS['whitelist_v3'],
        date = datetime.now().strftime("%d-%m-%Y"),
        proxy = config['proxy'].get('wget', '')
    output:
        join(REF_DIR, '3M-february-2018.txt')
    log:
        join(REF_DIR, 'logs', '3M-february-2018.txt.log')
    shell:
        """
        wget {params.proxy} -O {output} {params.url}
        echo "10xGenomics whitelist v3,NA,{params.url},{params.date}" > {log}
        """

rule txgenomics_org_prebuild:
    params:
        url = _URLS[ORG],
        out = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY),
        date = datetime.now().strftime("%d-%m-%Y"),
        proxy = ''
    output:
        json = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY, 'reference.json'),
        gtf = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY, 'anno', 'genes.gtf'),
        fasta = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY, 'fasta', 'genome.fa'),
        star_index = join(EXT_DIR, '10xgenomics', 'release-{}'.format(TX_RELEASE), ORG,  TX_ASSEMBLY, 'star', 'SA')
    log:
        join(REF_DIR, 'logs', '10x-reference.log')
    shell:
        """
        curl {params.proxy} {params.url} | tar xvz --strip-components=1 -C {params.out}
        ln -s {params.out}/genes {params.out}/anno
        echo "10xGenomics reference,NA,{params.url},{params.date}" > {log}
        """

rule txgenomics_all:
    input:
        join(REF_DIR, '737K-april-2014_rc.txt'),
        join(REF_DIR, '737K-august-2016.txt.txt'),
        join(REF_DIR, '3M-february-2018.txt'),
        join(REF_DIR, 'reference.json')
