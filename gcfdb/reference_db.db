#-*- mode: snakemake -*-
extra_conf_fn = srcdir('reference_db.config')
if os.path.exists(extra_conf_fn):
    with open(extra_conf_fn) as fh:
        c  = yaml.load(fh, Loader=Loader) or {}
        update_config2(config, c)

ORG = config['organism']

# support for custom reference dir
REF_DIR = config.get('ref_dir', environ.get('GCF_REFDIR'))
if REF_DIR is not None:
    if not os.path.isdir(REF_DIR):
        raise OSError("defined variable `REF_DIR` is not a valid directory")
    config['db']['reference_db'] = os.path.dirname(REF_DIR)
    
if 'reference_db' in config['db']:
    ref = config['db']['reference_db'].strip()
else:
    logger.error('Reference dir missing. Check config or other ways for ref dir setup')
    raise ValueError

config['db'][ref] = DB_CONF = config['db'].get(ref, {})

# supported references
if ref == 'ensembl':
    include: 'ensembl.db'
elif ref == 'gencode':
    include: 'gencode.db'
elif ref == '10xgenomics':
    include: '10xgenomics.db'
elif ref == 'refseq':
    include: 'refseq.db'
else:
    logger.error('`reference_db` value is not in the supported references.')
    raise ValueError

if REF_DIR is None:
    config['db'][ref]['assembly'] = assembly = DB_CONF.get('assembly', '')
    config['db'][ref]['release'] = release = DB_CONF.get('release', '')
    release_str = 'release-{}'.format(release) if release is not None else ''
    assembly_str = str(assembly) if assembly is not None else ''
    REF_DIR = join(EXT_DIR, ref, release_str, ORG, assembly_str)
config['base_ref_dir'] = REF_DIR

include:
    'indexes.rules'
include:
    'convert.rules'
    
def get_genome(*args, **kw):
    """
    """
    return join(REF_DIR, 'fasta', 'genome.fa')

def get_gtf(*args, **kw):
    """
    """
    return join(REF_DIR, 'anno', 'genes.gtf')
