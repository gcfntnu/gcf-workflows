#-*- mode: snakemake -*-

include:
    'filter/fastp.rules'


def get_processed_fastq(wildcards):
    COMPRESS = config['filter'].get('compress_filtered_fastq', False)
    DST_PTH = join(FILTER_INTERIM, 'fastq', 'trimmed', 'fastp')
    fastq = get_raw_fastq(wildcards)
    R1 = [i.split(FASTQ_DIR)[-1][1:] for i in fastq['R1']]
    if not COMPRESS:
        R1 = [i.split('.gz')[0] for i in R1 if i.endswith('.gz')]
    R2 = fastq.get('R2')
    if R2:
        R2 = [i.split(FASTQ_DIR)[-1][1:] for i in fastq['R2']]
        if not COMPRESS:
            R2 = [i.split('.gz')[0] for i in R2 if i.endswith('.gz')]
    if COMPRESS:
        ext = '.fastq.gz'
    else:
        ext = '.fastq'
    R1 = [join(DST_PTH, wildcards.sample + '_R1' + ext)]
    if R2:
        R2 = [join(DST_PTH, wildcards.sample + '_R2' + ext)]
        out = {'R1': R1, 'R2': R2}
    else:
        out = {'R1': R1}
    return out
